stages:
  - build
  - test
  - docker
  - deploy

maven-build:
  image: maven:3.9-eclipse-temurin-21
  stage: build
  script:
    - mvn clean package
  artifacts:
    when: on_success
    paths:
      - "target/*.jar"


maven-test:
  image: maven:3.9-eclipse-temurin-21
  stage: test
  dependencies: []
  script:
    - mvn verify
  artifacts:
    when: on_success
    reports:
      junit:
        - "target/surefire-reports/TEST-*.xml"

docker-build:
  stage: docker
  dependencies:
    - maven-build
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY_IMAGE
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

deploy:
  stage: deploy
  dependencies: []
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY_IMAGE
    - if [[ "$(docker ps -a --filter "name=springapp" --format '{{.Names}}')" == "springapp" ]]; then  docker rm -f springapp; else echo "No existe";  fi
  script:
    - docker run --name "springapp" -d -p 8082:8080 $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA